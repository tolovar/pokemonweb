{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Lavoro\\\\workspace\\\\pokemonweb\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser) {\n      setUser(storedUser);\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // funzione per disconnettere l'utente\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  // funzione per effettuare il login e salvare il token jwt nel localstorage\n  const handleLogin = async (username, password) => {\n    const res = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await res.json();\n    if (res.ok && data.access_token) {\n      // salvo il token nel localStorage\n      localStorage.setItem('token', data.access_token);\n      console.log('Token JWT salvato:', data.access_token);\n      return data.access_token;\n    } else {\n      throw new Error(data.error || data.message || 'login fallito');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      login,\n      logout,\n      handleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"Uq7KcTiOseX3k63CKoUNgtSkdNA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","storedUser","JSON","parse","localStorage","getItem","login","userData","setItem","stringify","logout","removeItem","handleLogin","username","password","res","fetch","method","headers","body","data","json","ok","access_token","console","log","Error","error","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aless/Lavoro/workspace/pokemonweb/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  // funzione per disconnettere l'utente\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // funzione per effettuare il login e salvare il token jwt nel localstorage\r\n  const handleLogin = async (username, password) => {\r\n    const res = await fetch('/api/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n    const data = await res.json();\r\n    if (res.ok && data.access_token) { \r\n      // salvo il token nel localStorage\r\n      localStorage.setItem('token', data.access_token);\r\n      console.log('Token JWT salvato:', data.access_token);\r\n      return data.access_token;\r\n    } else {\r\n      throw new Error(data.error || data.message || 'login fallito');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout, handleLogin }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAIJ,UAAU,EAAE;MACdH,OAAO,CAACG,UAAU,CAAC;MACnBD,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAIC,QAAQ,IAAK;IAC1BT,OAAO,CAACS,QAAQ,CAAC;IACjBP,kBAAkB,CAAC,IAAI,CAAC;IACxBI,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBZ,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;IACzBI,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BP,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAChD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEjB,IAAI,CAACO,SAAS,CAAC;QAAEI,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IACF,MAAMM,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7B,IAAIN,GAAG,CAACO,EAAE,IAAIF,IAAI,CAACG,YAAY,EAAE;MAC/B;MACAnB,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEY,IAAI,CAACG,YAAY,CAAC;MAChDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,IAAI,CAACG,YAAY,CAAC;MACpD,OAAOH,IAAI,CAACG,YAAY;IAC1B,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAACN,IAAI,CAACO,KAAK,IAAIP,IAAI,CAACQ,OAAO,IAAI,eAAe,CAAC;IAChE;EACF,CAAC;EAED,oBACEpC,OAAA,CAACC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAEjC,IAAI;MAAEE,eAAe;MAAEO,KAAK;MAAEI,MAAM;MAAEE;IAAY,CAAE;IAAAjB,QAAA,EAChFA;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACtC,EAAA,CAjDeF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}