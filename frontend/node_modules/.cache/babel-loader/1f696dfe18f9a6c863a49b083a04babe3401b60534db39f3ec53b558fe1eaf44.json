{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aless\\\\Lavoro\\\\workspace\\\\pokemonweb\\\\frontend\\\\src\\\\components\\\\PokemonList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PokemonGrid from './PokemonGrid';\nimport '../App.css';\nimport useDebounce from '../hooks/useDebounce';\nimport { typeColorClass } from '../utils/typeColorClass';\nimport Loader from './common/Loader';\nimport toast from 'react-hot-toast';\nimport Input from './common/Input';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZE = 18;\nfunction PokemonList() {\n  _s();\n  const [allPokemonNames, setAllPokemonNames] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchError, setSearchError] = useState('');\n  const [pokemonDetails, setPokemonDetails] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [debouncedSearch, setDebouncedSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [username, setUsername] = useState('');\n  const navigate = useNavigate();\n\n  // debounce handler\n  const debouncedSetSearch = useDebounce(value => {\n    setDebouncedSearch(value);\n  }, 800, {\n    trailing: true\n  });\n\n  // scarico tutti i nomi dei Pokémon una sola volta\n  useEffect(() => {\n    const fetchAllPokemonNames = async () => {\n      try {\n        const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1300');\n        const data = await res.json();\n        setAllPokemonNames(data.results.map(p => p.name));\n      } catch (err) {\n        setSearchError('Errore nel caricamento dei nomi Pokémon');\n      }\n    };\n    fetchAllPokemonNames();\n  }, []);\n\n  // effettuo la ricerca solo tramite API e solo su corrispondenze parziali\n  useEffect(() => {\n    // cerco solo quando debouncedSearch cambia\n    if (debouncedSearch.trim() === '') {\n      setSearchResults([]);\n      setSearchError('');\n      // resetto la pagina quando la barra di ricerca è vuota\n      setPage(1);\n      return;\n    }\n    setLoading(true);\n    setSearchError('');\n    // filtro i nomi che contengono la stringa inserita\n    const filteredNames = allPokemonNames.filter(name => name.toLowerCase().includes(debouncedSearch.toLowerCase()));\n    if (filteredNames.length === 0) {\n      setSearchResults([]);\n      setSearchError('Nessun Pokémon trovato');\n      setLoading(false);\n      return;\n    }\n    // scarico i dettagli dei Pokémon trovati \n    Promise.all(\n    // prendo solo 10 risultati alla volta per evitare troppe richieste\n    filteredNames.slice(0, 10).map(async name => {\n      if (pokemonDetails[name]) return pokemonDetails[name];\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n      return await res.json();\n    })).then(detailsArr => {\n      // aggiorno cache dettagli\n      const detailsObj = {};\n      detailsArr.forEach(d => {\n        if (d && d.name) detailsObj[d.name] = d;\n      });\n      setPokemonDetails(prev => ({\n        ...prev,\n        ...detailsObj\n      }));\n      setSearchResults(detailsArr.filter(d => d && d.name));\n      setLoading(false);\n    }).catch(() => {\n      setSearchError('Errore nella ricerca');\n      setLoading(false);\n    });\n  }, [debouncedSearch, allPokemonNames]);\n\n  // quando la barra è vuota, carico la lista di pokémon\n  useEffect(() => {\n    if (search.trim() !== '' || allPokemonNames.length === 0) return;\n    setLoading(true);\n    const start = (page - 1) * PAGE_SIZE;\n    const end = start + PAGE_SIZE;\n    const pageNames = allPokemonNames.slice(start, end);\n    Promise.all(pageNames.map(async name => {\n      if (pokemonDetails[name]) return pokemonDetails[name];\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n      return await res.json();\n    })).then(detailsArr => {\n      const detailsObj = {};\n      detailsArr.forEach(d => {\n        if (d && d.name) detailsObj[d.name] = d;\n      });\n      setPokemonDetails(prev => ({\n        ...prev,\n        ...detailsObj\n      }));\n      setLoading(false);\n    }).catch(() => {\n      setSearchError('Errore nel caricamento della pagina');\n      setLoading(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, search, allPokemonNames]);\n\n  // pokémon da mostrare\n  const pokemonToShow = search.trim() === '' ? allPokemonNames.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE).map(name => {\n    var _details$types, _details$types$, _details$types$$type, _details$sprites, _details$types2;\n    const details = pokemonDetails[name];\n    return {\n      name,\n      id: details === null || details === void 0 ? void 0 : details.id,\n      // solo il primo tipo altrimenti non funziona l'hovering\n      type: (details === null || details === void 0 ? void 0 : (_details$types = details.types) === null || _details$types === void 0 ? void 0 : (_details$types$ = _details$types[0]) === null || _details$types$ === void 0 ? void 0 : (_details$types$$type = _details$types$.type) === null || _details$types$$type === void 0 ? void 0 : _details$types$$type.name) || '',\n      sprite: (details === null || details === void 0 ? void 0 : (_details$sprites = details.sprites) === null || _details$sprites === void 0 ? void 0 : _details$sprites.front_default) || `https://img.pokemondb.net/sprites/home/normal/${name.toLowerCase()}.png`,\n      types: (details === null || details === void 0 ? void 0 : (_details$types2 = details.types) === null || _details$types2 === void 0 ? void 0 : _details$types2.map(t => t.type.name).join(' / ')) || ''\n    };\n  }) : searchResults.map(d => {\n    var _d$types, _d$types$, _d$types$$type, _d$sprites, _d$types2;\n    return {\n      name: d.name,\n      // solo il primo tipo anche nei risultati ricerca\n      type: ((_d$types = d.types) === null || _d$types === void 0 ? void 0 : (_d$types$ = _d$types[0]) === null || _d$types$ === void 0 ? void 0 : (_d$types$$type = _d$types$.type) === null || _d$types$$type === void 0 ? void 0 : _d$types$$type.name) || '',\n      sprite: ((_d$sprites = d.sprites) === null || _d$sprites === void 0 ? void 0 : _d$sprites.front_default) || `https://img.pokemondb.net/sprites/home/normal/${d.name.toLowerCase()}.png`,\n      types: ((_d$types2 = d.types) === null || _d$types2 === void 0 ? void 0 : _d$types2.map(t => t.type.name).join(' / ')) || ''\n    };\n  });\n\n  // paginazione, per non appesantire la lista\n  const totalPages = Math.ceil(allPokemonNames.length / PAGE_SIZE);\n  const handleSearch = e => {\n    e.preventDefault();\n    debouncedSetSearch(search);\n  };\n  const handleChange = e => {\n    setUsername(e.target.value);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"pt-12\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center my-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-pokemon-list\",\n            className: \"sr-only\",\n            children: \"Cerca Pok\\xE9mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"search-pokemon-list\",\n            type: \"text\",\n            placeholder: \"Cerca Pok\\xE9mon...\",\n            value: search,\n            onChange: e => {\n              setSearch(e.target.value);\n              debouncedSetSearch(e.target.value);\n            },\n            name: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), searchError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-error\",\n          children: searchError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(PokemonGrid, {\n          pokemonList: pokemonToShow,\n          loading: loading,\n          onPokemonClick: name => navigate(`/pokemon/${name}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 23\n        }, this), search.trim() === '' && totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPage(p => Math.max(1, p - 1)),\n            disabled: page === 1,\n            style: {\n              marginRight: 8\n            },\n            children: \"< Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), \"Pagina \", page, \" di \", totalPages, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPage(p => Math.min(totalPages, p + 1)),\n            disabled: page === totalPages,\n            style: {\n              marginLeft: 8\n            },\n            children: \"Next >\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonList, \"FnmdOzjVbA+bodzVUXXxgJaQlyU=\", false, function () {\n  return [useNavigate, useDebounce];\n});\n_c = PokemonList;\nexport default PokemonList;\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","PokemonGrid","useDebounce","typeColorClass","Loader","toast","Input","Header","jsxDEV","_jsxDEV","PAGE_SIZE","PokemonList","_s","allPokemonNames","setAllPokemonNames","search","setSearch","searchResults","setSearchResults","searchError","setSearchError","pokemonDetails","setPokemonDetails","loading","setLoading","debouncedSearch","setDebouncedSearch","page","setPage","username","setUsername","navigate","debouncedSetSearch","value","trailing","fetchAllPokemonNames","res","fetch","data","json","results","map","p","name","err","trim","filteredNames","filter","toLowerCase","includes","length","Promise","all","slice","then","detailsArr","detailsObj","forEach","d","prev","catch","start","end","pageNames","pokemonToShow","_details$types","_details$types$","_details$types$$type","_details$sprites","_details$types2","details","id","type","types","sprite","sprites","front_default","t","join","_d$types","_d$types$","_d$types$$type","_d$sprites","_d$types2","totalPages","Math","ceil","handleSearch","e","preventDefault","handleChange","target","fileName","_jsxFileName","lineNumber","columnNumber","className","children","htmlFor","placeholder","onChange","pokemonList","onPokemonClick","style","marginTop","onClick","max","disabled","marginRight","min","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/aless/Lavoro/workspace/pokemonweb/frontend/src/components/PokemonList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PokemonGrid from './PokemonGrid';\r\nimport '../App.css';\r\nimport useDebounce from '../hooks/useDebounce';\r\nimport { typeColorClass } from '../utils/typeColorClass';\r\nimport Loader from './common/Loader';\r\nimport toast from 'react-hot-toast';\r\nimport Input from './common/Input';\r\nimport Header from './Header';\r\n\r\nconst PAGE_SIZE = 18;\r\n\r\nfunction PokemonList() {\r\n  const [allPokemonNames, setAllPokemonNames] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchError, setSearchError] = useState('');\r\n  const [pokemonDetails, setPokemonDetails] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [debouncedSearch, setDebouncedSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [username, setUsername] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // debounce handler\r\n  const debouncedSetSearch = useDebounce((value) => {\r\n    setDebouncedSearch(value);\r\n  }, 800, { trailing: true });\r\n\r\n  // scarico tutti i nomi dei Pokémon una sola volta\r\n  useEffect(() => {\r\n    const fetchAllPokemonNames = async () => {\r\n      try {\r\n        const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1300');\r\n        const data = await res.json();\r\n        setAllPokemonNames(data.results.map(p => p.name));\r\n      } catch (err) {\r\n        setSearchError('Errore nel caricamento dei nomi Pokémon');\r\n      }\r\n    };\r\n    fetchAllPokemonNames();\r\n  }, []);\r\n\r\n  // effettuo la ricerca solo tramite API e solo su corrispondenze parziali\r\n  useEffect(() => {\r\n    // cerco solo quando debouncedSearch cambia\r\n    if (debouncedSearch.trim() === '') {\r\n      setSearchResults([]);\r\n      setSearchError('');\r\n      // resetto la pagina quando la barra di ricerca è vuota\r\n      setPage(1); \r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setSearchError('');\r\n    // filtro i nomi che contengono la stringa inserita\r\n    const filteredNames = allPokemonNames.filter(name =>\r\n      name.toLowerCase().includes(debouncedSearch.toLowerCase())\r\n    );\r\n    if (filteredNames.length === 0) {\r\n      setSearchResults([]);\r\n      setSearchError('Nessun Pokémon trovato');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    // scarico i dettagli dei Pokémon trovati \r\n    Promise.all(\r\n      // prendo solo 10 risultati alla volta per evitare troppe richieste\r\n      filteredNames.slice(0, 10).map(async name => {\r\n        if (pokemonDetails[name]) return pokemonDetails[name];\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n        return await res.json();\r\n      })\r\n    ).then(detailsArr => {\r\n      // aggiorno cache dettagli\r\n      const detailsObj = {};\r\n      detailsArr.forEach(d => {\r\n        if (d && d.name) detailsObj[d.name] = d;\r\n      });\r\n      setPokemonDetails(prev => ({ ...prev, ...detailsObj }));\r\n      setSearchResults(detailsArr.filter(d => d && d.name));\r\n      setLoading(false);\r\n    }).catch(() => {\r\n      setSearchError('Errore nella ricerca');\r\n      setLoading(false);\r\n    });\r\n  }, [debouncedSearch, allPokemonNames]);\r\n\r\n  // quando la barra è vuota, carico la lista di pokémon\r\n  useEffect(() => {\r\n    if (search.trim() !== '' || allPokemonNames.length === 0) return;\r\n    setLoading(true);\r\n    const start = (page - 1) * PAGE_SIZE;\r\n    const end = start + PAGE_SIZE;\r\n    const pageNames = allPokemonNames.slice(start, end);\r\n\r\n    Promise.all(\r\n      pageNames.map(async name => {\r\n        if (pokemonDetails[name]) return pokemonDetails[name];\r\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n        return await res.json();\r\n      })\r\n    ).then(detailsArr => {\r\n      const detailsObj = {};\r\n      detailsArr.forEach(d => {\r\n        if (d && d.name) detailsObj[d.name] = d;\r\n      });\r\n      setPokemonDetails(prev => ({ ...prev, ...detailsObj }));\r\n      setLoading(false);\r\n    }).catch(() => {\r\n      setSearchError('Errore nel caricamento della pagina');\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page, search, allPokemonNames]);\r\n\r\n  // pokémon da mostrare\r\n  const pokemonToShow = search.trim() === ''\r\n    ? allPokemonNames.slice((page - 1) * PAGE_SIZE, page * PAGE_SIZE).map(name => {\r\n        const details = pokemonDetails[name];\r\n        return {\r\n          name,\r\n          id: details?.id,\r\n          // solo il primo tipo altrimenti non funziona l'hovering\r\n          type: details?.types?.[0]?.type?.name || '', \r\n          sprite: details?.sprites?.front_default ||\r\n                  `https://img.pokemondb.net/sprites/home/normal/${name.toLowerCase()}.png`,\r\n          types: details?.types?.map(t => t.type.name).join(' / ') || ''\r\n        };\r\n      })\r\n    : searchResults.map(d => ({\r\n        name: d.name,\r\n        // solo il primo tipo anche nei risultati ricerca\r\n        type: d.types?.[0]?.type?.name || '', \r\n        sprite: d.sprites?.front_default ||\r\n                `https://img.pokemondb.net/sprites/home/normal/${d.name.toLowerCase()}.png`,\r\n        types: d.types?.map(t => t.type.name).join(' / ') || ''\r\n      }));\r\n\r\n  // paginazione, per non appesantire la lista\r\n  const totalPages = Math.ceil(allPokemonNames.length / PAGE_SIZE);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    debouncedSetSearch(search);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Header />\r\n      <main className=\"pt-12\">\r\n        <header className=\"App-header\">\r\n          <div className=\"flex items-center justify-center my-8\">\r\n            {/* label solo per screen reader */}\r\n            <label htmlFor=\"search-pokemon-list\" className=\"sr-only\">Cerca Pokémon</label>\r\n            <Input\r\n              id=\"search-pokemon-list\"\r\n              type=\"text\"\r\n              placeholder=\"Cerca Pokémon...\"\r\n              value={search}\r\n              onChange={e => {\r\n                setSearch(e.target.value);\r\n                debouncedSetSearch(e.target.value);\r\n              }}\r\n              name=\"search\"\r\n            />\r\n          </div>\r\n          {searchError && <div className=\"custom-error\">{searchError}</div>}\r\n          <PokemonGrid\r\n            pokemonList={pokemonToShow}\r\n            loading={loading}\r\n            onPokemonClick={name => navigate(`/pokemon/${name}`)}\r\n          />\r\n          {loading && <Loader />}\r\n          {search.trim() === '' && totalPages > 1 && (\r\n            <div style={{ marginTop: 16 }}>\r\n              <button\r\n                onClick={() => setPage(p => Math.max(1, p - 1))}\r\n                disabled={page === 1}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                &lt; Prev\r\n              </button>\r\n              Pagina {page} di {totalPages}\r\n              <button\r\n                onClick={() => setPage(p => Math.min(totalPages, p + 1))}\r\n                disabled={page === totalPages}\r\n                style={{ marginLeft: 8 }}\r\n              >\r\n                Next &gt;\r\n              </button>\r\n            </div>\r\n          )}\r\n        </header>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}